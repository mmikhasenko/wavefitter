// An example of model description

// Basic fit information:
name = "K-matrix 2^{-+} sector";
  
// Data specification:

data = 
{
  path = "~/Dropbox/2+-COMPASS/all_waves_3pi/";
  points = (
   @include "configs/data.5waves.I.Re.Im.cfg"
  );
};

modelT =
{
  name = "K-matrix";
  channels = ( { type = "quasi-two-body";
                 particles = ("f2","pi");
                 L = 0;
                 size = 5.; # GeV^{-1}
               },
               { type = "quasi-two-body";
                 particles = ("f2","pi");
                 L = 2;
                 size = 5.; # GeV^{-1}
               },
               { type = "quasi-two-body";
                 particles = ("rho","pi");
                 L = 1;
                 size = 5.; # GeV^{-1}
               },
               { type = "quasi-two-body";
                 particles = ("rho","pi");
                 L = 3;
                 size = 5.; # GeV^{-1}
               },
               { type = "quasi-two-body";
                 particles = ("pipiS","pi");
                 L = 2;
                 size = 5.; # GeV^{-1}
               }
             );

  content = ( { type = "pole";
                couplings = "g";
                mass = "m0";
              },
              { type = "pole";
                couplings = "h";
                mass = "m1";
              },
              { type = "pole";
                couplings = "i";
                mass = "m2";
              }
            );
};

modelA = ( /* t' bin: tprime_0.100000-0.112853 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t0c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.1; // has to be removed, and replaced by proper solution
                            par_name = "t0B";
                            long_range_lookup = [ "/tmp/t0.deck.2.f2piS.30.out",
                                                  "/tmp/t0.deck.2.f2piD.30.out",
                                                  "/tmp/t0.deck.2.rhopiP.30.out",
                                                  "/tmp/t0.deck.2.rhopiF.30.out",
                                                  "/tmp/t0.deck.2.pipiSpiD.30.out" ];
                            };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t1c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.112; // has to be removed, and replaced by proper solution
                            par_name = "t1B";
                            long_range_lookup = [ "/tmp/t1.deck.2.f2piS.30.out",
                                                  "/tmp/t1.deck.2.f2piD.30.out",
                                                  "/tmp/t1.deck.2.rhopiP.30.out",
                                                  "/tmp/t1.deck.2.rhopiF.30.out",
                                                  "/tmp/t1.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.127471-0.144385 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t2c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.1274; // has to be removed, and replaced by proper solution
                            par_name = "t2B";
                            long_range_lookup = [ "/tmp/t2.deck.2.f2piS.30.out",
                                                  "/tmp/t2.deck.2.f2piD.30.out",
                                                  "/tmp/t2.deck.2.rhopiP.30.out",
                                                  "/tmp/t2.deck.2.rhopiF.30.out",
                                                  "/tmp/t2.deck.2.pipiSpiD.30.out" ];
                           };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t3c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.144; // has to be removed, and replaced by proper solution
                            par_name = "t3B";
                            long_range_lookup = [ "/tmp/t3.deck.2.f2piS.30.out",
                                                  "/tmp/t3.deck.2.f2piD.30.out",
                                                  "/tmp/t3.deck.2.rhopiP.30.out",
                                                  "/tmp/t3.deck.2.rhopiF.30.out",
                                                  "/tmp/t3.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t4c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.164; // has to be removed, and replaced by proper solution
                            par_name = "t4B";
                            long_range_lookup = [ "/tmp/t4.deck.2.f2piS.30.out",
                                                  "/tmp/t4.deck.2.f2piD.30.out",
                                                  "/tmp/t4.deck.2.rhopiP.30.out",
                                                  "/tmp/t4.deck.2.rhopiF.30.out",
                                                  "/tmp/t4.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t5c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.1888; // has to be removed, and replaced by proper solution
                            par_name = "t5B";
                            long_range_lookup = [ "/tmp/t5.deck.2.f2piS.30.out",
                                                  "/tmp/t5.deck.2.f2piD.30.out",
                                                  "/tmp/t5.deck.2.rhopiP.30.out",
                                                  "/tmp/t5.deck.2.rhopiF.30.out",
                                                  "/tmp/t5.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t6c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.22; // has to be removed, and replaced by proper solution
                            par_name = "t6B";
                            long_range_lookup = [ "/tmp/t6.deck.2.f2piS.30.out",
                                                  "/tmp/t6.deck.2.f2piD.30.out",
                                                  "/tmp/t6.deck.2.rhopiP.30.out",
                                                  "/tmp/t6.deck.2.rhopiF.30.out",
                                                  "/tmp/t6.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t7c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.262; // has to be removed, and replaced by proper solution
                            par_name = "t7B";
                            long_range_lookup = [ "/tmp/t7.deck.2.f2piS.30.out",
                                                  "/tmp/t7.deck.2.f2piD.30.out",
                                                  "/tmp/t7.deck.2.rhopiP.30.out",
                                                  "/tmp/t7.deck.2.rhopiF.30.out",
                                                  "/tmp/t7.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t8c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.326; // has to be removed, and replaced by proper solution
                            par_name = "t8B";
                            long_range_lookup = [ "/tmp/t8.deck.2.f2piS.30.out",
                                                  "/tmp/t8.deck.2.f2piD.30.out",
                                                  "/tmp/t8.deck.2.rhopiP.30.out",
                                                  "/tmp/t8.deck.2.rhopiF.30.out",
                                                  "/tmp/t8.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t9c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.448; // has to be removed, and replaced by proper solution
                            par_name = "t9B";
                            long_range_lookup = [ "/tmp/t9.deck.2.f2piS.30.out",
                                                  "/tmp/t9.deck.2.f2piD.30.out",
                                                  "/tmp/t9.deck.2.rhopiP.30.out",
                                                  "/tmp/t9.deck.2.rhopiF.30.out",
                                                  "/tmp/t9.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           },
           /* t' bin: tprime_0.112853-0.127471 */
           { scattering = "K-matrix";              // no options, but it can be commented
             short_range = { type = "pietarinen";  // only one option 
                             powers = ((0, "t10c"));  // 0 is power of map variable 
                             rhc = 0.1;            // where the RHC starts 
                             slope = 1.1;          // parameter of mapping 
                           };
             long_range = { type = "Deck";         // only one option 
                            pomeron_S = 1;         // Sp 
                            pomeron_M = 0;         // lamP = -M 
                            damping_R = 5.;        // a pole is intruduced at M = 1./R 
                            pomeron_virtuality = -0.724; // has to be removed, and replaced by proper solution
                            par_name = "t10B";
                            long_range_lookup = [ "/tmp/t10.deck.2.f2piS.30.out",
                                                  "/tmp/t10.deck.2.f2piD.30.out",
                                                  "/tmp/t10.deck.2.rhopiP.30.out",
                                                  "/tmp/t10.deck.2.rhopiF.30.out",
                                                  "/tmp/t10.deck.2.pipiSpiD.30.out" ];
                          };
             unitarisation = "DoIt";
           }           
);

adjustment = {
  relation = (
                @include "configs/relations.5waves.all.I.Re.Im.cfg"
             );
};

parameters = {
  start_value = ( /* First pole */
                  ("m0", 1.721, 1.601, 1.801),
                  ("g0", 3.1, -10., 10.),
                  ("g1", 0.0, -10., 10.),
                  ("g2", 3.0, -10., 10.),
                  ("g3", 2.5, -10., 10.),
                  /* Second pole */
                  ("m1", 1.831, 1.801, 2.051),
                  ("h0", 1. , -10., 10.),
                  ("h1", 3. , -10., 10.),
                  ("h2", 0.0, -10., 10.),
                  ("h3", 2.0, -10., 10.),
                  /* Third pole */
                  ("m2", 2.151, 2.051, 2.301),
                  ("i0", 3.0, -10., 10.),
                  ("i1", 3.0, -10., 10.),
                  ("i2", 3.0, -10., 10.),
                  ("i3", 3.0, -10., 10.),
        // production parameters are following
                  /* Production constants */
                  ("t0cr0",  30., -40., 40.),
                  ("t0cr1",  5. , -40., 40.),
                  ("t0cr2",  0. , -40., 40.),
                  ("t0cr3",  10., -40., 40.),
                  ("t0cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t0ci0", 0., -10., 10.),
                  ("t0ci1", 0., -10., 10.),
                  ("t0ci2", 0., -10., 10.),
                  ("t0ci3", 0., -10., 10.),
                  ("t0ci4", 0., -10., 10.),
                  /* Background */
                  ("t0Br", 1., -10., 10.),
                  ("t0Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t1cr0",  30., -40., 40.),
                  ("t1cr1",  5. , -40., 40.),
                  ("t1cr2",  0. , -40., 40.),
                  ("t1cr3",  10., -40., 40.),
                  ("t1cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t1ci0", 0., -10., 10.),
                  ("t1ci1", 0., -10., 10.),
                  ("t1ci2", 0., -10., 10.),
                  ("t1ci3", 0., -10., 10.),
                  ("t1ci4", 0., -10., 10.),
                  /* Background */
                  ("t1Br", 1., -10., 10.),
                  ("t1Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t2cr0",  30., -40., 40.),
                  ("t2cr1",  5. , -40., 40.),
                  ("t2cr2",  0. , -40., 40.),
                  ("t2cr3",  10., -40., 40.),
                  ("t2cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t2ci0", 0., -10., 10.),
                  ("t2ci1", 0., -10., 10.),
                  ("t2ci2", 0., -10., 10.),
                  ("t2ci3", 0., -10., 10.),
                  ("t2ci4", 0., -10., 10.),
                  /* Background */
                  ("t2Br", 1., -10., 10.),
                  ("t2Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t3cr0",  30., -40., 40.),
                  ("t3cr1",  5. , -40., 40.),
                  ("t3cr2",  0. , -40., 40.),
                  ("t3cr3",  10., -40., 40.),
                  ("t3cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t3ci0", 0., -10., 10.),
                  ("t3ci1", 0., -10., 10.),
                  ("t3ci2", 0., -10., 10.),
                  ("t3ci3", 0., -10., 10.),
                  ("t3ci4", 0., -10., 10.),
                  /* Background */
                  ("t3Br", 1., -10., 10.),
                  ("t3Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t4cr0",  30., -40., 40.),
                  ("t4cr1",  5. , -40., 40.),
                  ("t4cr2",  0. , -40., 40.),
                  ("t4cr3",  10., -40., 40.),
                  ("t4cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t4ci0", 0., -10., 10.),
                  ("t4ci1", 0., -10., 10.),
                  ("t4ci2", 0., -10., 10.),
                  ("t4ci3", 0., -10., 10.),
                  ("t4ci4", 0., -10., 10.),
                  /* Background */
                  ("t4Br", 1., -10., 10.),
                  ("t4Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t5cr0",  30., -40., 40.),
                  ("t5cr1",  5. , -40., 40.),
                  ("t5cr2",  0. , -40., 40.),
                  ("t5cr3",  10., -40., 40.),
                  ("t5cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t5ci0", 0., -10., 10.),
                  ("t5ci1", 0., -10., 10.),
                  ("t5ci2", 0., -10., 10.),
                  ("t5ci3", 0., -10., 10.),
                  ("t5ci4", 0., -10., 10.),
                  /* Background */
                  ("t5Br", 1., -10., 10.),
                  ("t5Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t6cr0",  30., -40., 40.),
                  ("t6cr1",  5. , -40., 40.),
                  ("t6cr2",  0. , -40., 40.),
                  ("t6cr3",  10., -40., 40.),
                  ("t6cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t6ci0", 0., -10., 10.),
                  ("t6ci1", 0., -10., 10.),
                  ("t6ci2", 0., -10., 10.),
                  ("t6ci3", 0., -10., 10.),
                  ("t6ci4", 0., -10., 10.),
                  /* Background */
                  ("t6Br", 1., -10., 10.),
                  ("t6Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t7cr0",  30., -40., 40.),
                  ("t7cr1",  5. , -40., 40.),
                  ("t7cr2",  0. , -40., 40.),
                  ("t7cr3",  10., -40., 40.),
                  ("t7cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t7ci0", 0., -10., 10.),
                  ("t7ci1", 0., -10., 10.),
                  ("t7ci2", 0., -10., 10.),
                  ("t7ci3", 0., -10., 10.),
                  ("t7ci4", 0., -10., 10.),
                  /* Background */
                  ("t7Br", 1., -10., 10.),
                  ("t7Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t8cr0",  30., -40., 40.),
                  ("t8cr1",  5. , -40., 40.),
                  ("t8cr2",  0. , -40., 40.),
                  ("t8cr3",  10., -40., 40.),
                  ("t8cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t8ci0", 0., -10., 10.),
                  ("t8ci1", 0., -10., 10.),
                  ("t8ci2", 0., -10., 10.),
                  ("t8ci3", 0., -10., 10.),
                  ("t8ci4", 0., -10., 10.),
                  /* Background */
                  ("t8Br", 1., -10., 10.),
                  ("t8Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t9cr0",  30., -40., 40.),
                  ("t9cr1",  5. , -40., 40.),
                  ("t9cr2",  0. , -40., 40.),
                  ("t9cr3",  10., -40., 40.),
                  ("t9cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t9ci0", 0., -10., 10.),
                  ("t9ci1", 0., -10., 10.),
                  ("t9ci2", 0., -10., 10.),
                  ("t9ci3", 0., -10., 10.),
                  ("t9ci4", 0., -10., 10.),
                  /* Background */
                  ("t9Br", 1., -10., 10.),
                  ("t9Bi", 0., -10., 10.)
                  ,
                  /* Production constants */
                  ("t10cr0",  30., -40., 40.),
                  ("t10cr1",  5. , -40., 40.),
                  ("t10cr2",  0. , -40., 40.),
                  ("t10cr3",  10., -40., 40.),
                  ("t10cr4",  10., -40., 40.),
                  /* Imaginary part of production constants */
                  ("t10ci0", 0., -10., 10.),
                  ("t10ci1", 0., -10., 10.),
                  ("t10ci2", 0., -10., 10.),
                  ("t10ci3", 0., -10., 10.),
                  ("t10ci4", 0., -10., 10.),
                  /* Background */
                  ("t10Br", 1., -10., 10.),
                  ("t10Bi", 0., -10., 10.)
                );
};

fit_settings = {
  nAttempts = 300;
  strategy = ( { relations_to_fit = [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                                     26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50,
                                     51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
                                     66, 67, 68, 69, 70, 71, 72, 73, 74, 85, 86, 87, 88, 89, 90, 
                                     91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
                                     105, 106, 107, 108, 109, 120, 121, 122, 123, 124, 125, 126, 
                                     127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
                                     139, 140, 141, 142, 143, 144, 155, 156, 157, 158, 159, 160, 
                                     161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
                                     173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 
                                     195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 
                                     207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 227, 228, 
                                     229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 
                                     241, 242, 243, 244, 245, 246, 247, 248, 249, 260, 261, 262, 
                                     263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 
                                     275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 295, 296, 
                                     297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 
                                     309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 330, 
                                     331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
                                     343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 
                                     365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 
                                     377, 378, 379, 380, 381, 382, 383, 384];
                 pars_to_vary = [
                                  "m0", "g0" , "g1" , "g2" , "g3", "g4",
                                  "m1", "h0" , "h1" , "h2" , "h3", "h4",
                                  "m2", "i0" , "i1" , "i2" , "i3", "i4",
                                  
                                  "t0cr0" , "t0cr1" , "t0cr2" , "t0cr3", "t0cr4",
                                  "t0ci0" , "t0ci1" , "t0ci2" , "t0ci3", "t0ci4",
                                  "t0Br",  "t0Bi",
                                  
                                  "t1cr0" , "t1cr1" , "t1cr2" , "t1cr3", "t1cr4",
                                  "t1ci0" , "t1ci1" , "t1ci2" , "t1ci3", "t1ci4",
                                  "t1Br",  "t1Bi",
                                  
                                  "t2cr0" , "t2cr1" , "t2cr2" , "t2cr3", "t2cr4",
                                  "t2ci0" , "t2ci1" , "t2ci2" , "t2ci3", "t2ci4",
                                  "t2Br",  "t2Bi",

                                  "t3cr0" , "t3cr1" , "t3cr2" , "t3cr3", "t3cr4",
                                  "t3ci0" , "t3ci1" , "t3ci2" , "t3ci3", "t3ci4",
                                  "t3Br",  "t3Bi",

                                  "t4cr0" , "t4cr1" , "t4cr2" , "t4cr3", "t4cr4",
                                  "t4ci0" , "t4ci1" , "t4ci2" , "t4ci3", "t4ci4",
                                  "t4Br",  "t4Bi",

                                  "t5cr0" , "t5cr1" , "t5cr2" , "t5cr3", "t5cr4",
                                  "t5ci0" , "t5ci1" , "t5ci2" , "t5ci3", "t5ci4",
                                  "t5Br",  "t5Bi",

                                  "t6cr0" , "t6cr1" , "t6cr2" , "t6cr3", "t6cr4",
                                  "t6ci0" , "t6ci1" , "t6ci2" , "t6ci3", "t6ci4",
                                  "t6Br",  "t6Bi",

                                  "t7cr0" , "t7cr1" , "t7cr2" , "t7cr3", "t7cr4",
                                  "t7ci0" , "t7ci1" , "t7ci2" , "t7ci3", "t7ci4",
                                  "t7Br",  "t7Bi",

                                  "t8cr0" , "t8cr1" , "t8cr2" , "t8cr3", "t8cr4",
                                  "t8ci0" , "t8ci1" , "t8ci2" , "t8ci3", "t8ci4",
                                  "t8Br",  "t8Bi",

                                  "t9cr0" , "t9cr1" , "t9cr2" , "t9cr3", "t9cr4",
                                  "t9ci0" , "t9ci1" , "t9ci2" , "t9ci3", "t9ci4",
                                  "t9Br",  "t9Bi",

                                  "t10cr0" , "t10cr1" , "t10cr2" , "t10cr3", "t10cr4",
                                  "t10ci0" , "t10ci1" , "t10ci2" , "t10ci3", "t10ci4",
                                  "t10Br",  "t10Bi"
                                  ];
               }
             );
  dout_name = "/tmp/fit.11t.re-im.intervals";
};


// plot_settings = {
// //  path_to_fit_results = "/tmp/fit.11t.re-im.intervals/fit.results.root";
// //  entry_fit_result = 11;
// 
//   type = "model data"; /* model &| data */
//   mapping = (  (0), (10), (11), (12), /*numner of relation to plot*/
//               (16),  (1), (13), (14),
//               (17), (19),  (2), (15),
//               (18), (20), (21),  (3)
//             );
//   what_to_plot = ( { title = "Model";
//                      set_to_zero = ();
//                      color = 2;
//                    },
//                    { title = "Deck projection";
//                      set_to_zero = ["g1","g1","g2","g3","h0","h1","h2","h3","i0","i1","i2","i3"];
//                      color = 8;
//                      mapping_elements = [0, 5, 10, 15];
//                    },
//                    { title = "Pole no.1";
//                      set_to_zero = ["t0Br","t0Bi","h0","h1","h2","h3","i0","i1","i2","i3"];
//                      color = 9;
//                      mapping_elements = [0, 5, 10, 15];
//                    },
//                    { title = "Pole no.2";
//                      set_to_zero = ["t0Br","t0Bi","g0","g1","g2","g3","i0","i1","i2","i3"];
//                      color = 9;
//                      mapping_elements = [0, 5, 10, 15];
//                    },
//                    { title = "Pole no.3";
//                      set_to_zero = ["t0Br","t0Bi","g0","g1","g2","g3","h0","h1","h2","h3"];
//                      color = 9;
//                      mapping_elements = [0, 5, 10, 15];
//                    }
//                  )
//   fplot_name = "/tmp/default_plot.read_model_settings.pdf";
// }; 
